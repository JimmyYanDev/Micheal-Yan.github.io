[{"title":"JDBC简单使用总结","date":"2017-07-22T02:28:50.000Z","path":"posts/7933063e/","text":"什么是JDBC？JDBC 的全称是 Java Database Connectivity，即Java数据库连接，它是一种可以执行 SQL 语句的 Java API。为什么要使用JDBC？通过使用 JDBC，就可以使用同一种 API 访问不同的数据库系统。换言之，无论你使用什么类型的数据库，只要根据 JDBC API 编写一套数据库操作逻辑。如何使用JDBC去操作数据库？","tags":[{"name":"Java数据库连接","slug":"Java数据库连接","permalink":"https://Micheal-Yan.github.io/tags/Java数据库连接/"},{"name":"JDBC","slug":"JDBC","permalink":"https://Micheal-Yan.github.io/tags/JDBC/"}]},{"title":"使用XML定义选项菜单","date":"2017-07-21T01:28:37.000Z","path":"posts/a4a7bc15/","text":"何为选项菜单？选项菜单是某个Activity的主菜单项，供您放置对应用产生全局影响的操作，如“搜索”、“撰写电子邮件”和设置。选项菜单中的项目在屏幕上的显示位置取决于您开发应用所使用的 Android 版本：如果您开发的应用适用于 Android 2.3.x （API 级别10）或更低版本，选项菜单的内容会出现在屏幕底部如下图所示，且当菜单项超过6个时，则会讲第六项和其余项目放入溢出菜单（即图中的 More 菜单项）中。如果您开发的应用适用于 Android 3.0 （API 级别 11）及更高版本，选项菜单的内容将出现在应用栏中如下图所示。默认情况下，系统会将所有的菜单项放入操作溢出菜单（即图中标号为3的菜单项）中。创建menu资源文件首先我在 app/src/mian/res/menu/ 目录下创建一个 my_menu.xml 文件内容如下：1234567891011121314151617181920212223242526272829303132333435363738&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt; &lt;item android:id=&quot;@+id/item1&quot; android:icon=&quot;@mipmap/ic_launcher&quot; android:title=&quot;item1&quot;/&gt; &lt;item android:id=&quot;@+id/item2&quot; android:icon=&quot;@mipmap/ic_launcher&quot; android:title=&quot;item2&quot;/&gt; &lt;group android:id=&quot;@+id/group&quot; android:checkableBehavior=&quot;single&quot;&gt; &lt;item android:id=&quot;@+id/group_item1&quot; android:icon=&quot;@mipmap/ic_launcher&quot; android:title=&quot;group_item1&quot;/&gt; &lt;item android:id=&quot;@+id/group_item2&quot; android:icon=&quot;@mipmap/ic_launcher&quot; android:title=&quot;group_item2&quot;/&gt; &lt;/group&gt; &lt;item android:id=&quot;@+id/submenu&quot; android:title=&quot;submenu_title&quot;&gt; &lt;menu&gt; &lt;item android:id=&quot;@+id/submenu_item1&quot; android:title=&quot;submenu_item1&quot;/&gt; &lt;/menu&gt; &lt;/item&gt;&lt;/menu&gt;从代码中我们可以看出，菜单资源文件以&lt;menu&gt;为根节点，使用&lt;item&gt;元素来定义菜单项。同时，我们也可以选择使用&lt;group&gt;元素来定义一个组，来对组内的菜单项的一些特性进行统一的修改，比如是否可见。最后，可以看到我们以在&lt;item&gt;元素中嵌套&lt;menu&gt;元素的方式来创建子菜单。&lt;item&gt;元素的常用属性：android:id 为菜单项指定一个唯一标识android:title 指定菜单项的标题android:icon 指定菜单项的图标android:showAsAction 指定菜单项作为操作项目显示在应用栏的时间和方式&lt;group&gt;元素的常用属性android:id 为改组菜单指定一个唯一标识android:checkableBehavior 指定改组菜单的选择行为android:visible 指定改组菜单是否可见android:enable 指定改组菜单是否可用更详细的介绍请参考API文档Menu部分。加载menu资源文件通过重写 onCreateOptionsMenu() 方法，来为 Activity 指定选项菜单。123456789101112131415public class MainActivity extends AppCompatActivity &#123; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); &#125; @Override public boolean onCreateOptionsMenu(Menu menu) &#123; MenuInflater inflater = getMenuInflater(); inflater.inflate(R.menu.my_menu, menu); return true; &#125;&#125;运行效果：处理点击事件当我们从选项菜单中选择项目时，系统将调用 Activity 的 onOptionsItemSelected() 方法。 此方法将传递所选的 MenuItem，可以通过调用 getItemId() 方法来识别项目，该方法将返回菜单项的唯一 ID（由菜单资源中的 android:id 属性定义）。 我们可以将此 ID 与已知的菜单项匹配，以执行适当的操作。例如：123456789101112131415161718192021222324252627282930public class MainActivity extends AppCompatActivity &#123; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); &#125; @Override public boolean onCreateOptionsMenu(Menu menu) &#123; MenuInflater inflater = getMenuInflater(); inflater.inflate(R.menu.my_menu, menu); return true; &#125; @Override public boolean onOptionsItemSelected(MenuItem item) &#123; switch (item.getItemId()) &#123; case R.id.group_item1: item.setChecked(true); return true; case R.id.group_item2: item.setChecked(true); return true; default: Toast.makeText(this, &quot;selected &quot; + item.getTitle(), Toast.LENGTH_SHORT).show(); return super.onOptionsItemSelected(item); &#125; &#125;&#125;运行效果：总结本文主要初步的介绍了如何使用 XML 定义选项菜单，定义其他类型菜单的方法类似。更深入的了解和使用菜单请参考Android官方教程。关于即便设置showAsAction=”always”，items仍然在overflow中显示的问题，请参考这篇文章。ps:欢迎留言交流，共同进步。","tags":[{"name":"android","slug":"android","permalink":"https://Micheal-Yan.github.io/tags/android/"}]},{"title":"Hello World","date":"2017-04-30T10:41:04.000Z","path":"posts/4a17b156/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.Quick StartCreate a new post1$ hexo new \"My New Post\"More info: WritingRun server1$ hexo serverMore info: ServerGenerate static files1$ hexo generateMore info: GeneratingDeploy to remote sites1$ hexo deployMore info: Deployment","tags":[{"name":"Hello World","slug":"Hello-World","permalink":"https://Micheal-Yan.github.io/tags/Hello-World/"},{"name":"Test","slug":"Test","permalink":"https://Micheal-Yan.github.io/tags/Test/"}]}]
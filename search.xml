<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[JDBC简单使用总结]]></title>
      <url>/posts/7933063e/</url>
      <content type="html"><![CDATA[<!-- build time:Sun Jul 23 2017 06:31:56 GMT+0800 (CST) --><h2 id="什么是-JDBC？"><a href="#什么是-JDBC？" class="headerlink" title="什么是 JDBC？"></a>什么是 JDBC？</h2><p>JDBC 的全称是 Java Database Connectivity，即Java数据库连接，它是一种可以执行 SQL 语句的 Java API。</p><h2 id="为什么要使用-JDBC？"><a href="#为什么要使用-JDBC？" class="headerlink" title="为什么要使用 JDBC？"></a>为什么要使用 JDBC？</h2><p>通过使用 JDBC，就可以使用同一种 API 访问不同的数据库系统。换言之，无论你使用什么类型的数据库，只要根据 JDBC API 编写一套数据库操作逻辑。</p><h2 id="如何使用-JDBC-去操作数据库？"><a href="#如何使用-JDBC-去操作数据库？" class="headerlink" title="如何使用 JDBC 去操作数据库？"></a>如何使用 JDBC 去操作数据库？</h2><h3 id="1，加载数据库驱动。"><a href="#1，加载数据库驱动。" class="headerlink" title="1，加载数据库驱动。"></a>1，加载数据库驱动。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">// 加载驱动</div><div class="line">Class.forName(driverClass);</div></pre></td></tr></table></figure><p>例如加载 MySQL 驱动，首先搜索“MySQL JDBC 驱动”下载驱动jar包，然后导入到工程中，最后在 Java 代码中调用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">// 加载 MySQL 驱动</div><div class="line">Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</div></pre></td></tr></table></figure><h3 id="2，通过-DriverManager-获取数据库连接"><a href="#2，通过-DriverManager-获取数据库连接" class="headerlink" title="2，通过 DriverManager 获取数据库连接"></a>2，通过 DriverManager 获取数据库连接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">// 获取数据库连接</div><div class="line">DriverManager.getConnection(String url, String user, String password);</div></pre></td></tr></table></figure><p>例如我想连接我的 MySQL 数据库中的 Test 数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">String url = &quot;jdbc:mysql://127.0.0.1:3306/Test&quot;; // 连接指定数据库的 URL，不同数据库的连接 URL，可通过查看相应的数据库驱动文档</div><div class="line">String user = &quot;root&quot;; // 登录数据库的用户名</div><div class="line">String password = &quot;123456&quot;; // 登录数据库的密码</div><div class="line">Connection conn = DriverManager.getConnection(url, user, password); // 返回 Connection 对象</div></pre></td></tr></table></figure><h3 id="3，通过-Connection-对象创建-Statement-对象"><a href="#3，通过-Connection-对象创建-Statement-对象" class="headerlink" title="3，通过 Connection 对象创建 Statement 对象"></a>3，通过 Connection 对象创建 Statement 对象</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">// 这里我们创建一个基本的 Statement 对象</div><div class="line">Statement stmt = conn.createStatement();</div></pre></td></tr></table></figure><h3 id="4，使用-Statement-执行-SQL-语句"><a href="#4，使用-Statement-执行-SQL-语句" class="headerlink" title="4，使用 Statement 执行 SQL 语句"></a>4，使用 Statement 执行 SQL 语句</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">// Statement 有三种执行 SQL 语句的方法,通常我们使用比较多的是executeQuery()方法，</div><div class="line">// 执行 select 方法，返回查询到的结果集 ResultSet。</div><div class="line">String selectSql = &quot;select * from table1&quot;;</div><div class="line">ResultSet rs = stmt.executeQuery(selectSql);</div><div class="line">*/</div></pre></td></tr></table></figure><h3 id="5，对执行结果进行处理"><a href="#5，对执行结果进行处理" class="headerlink" title="5，对执行结果进行处理"></a>5，对执行结果进行处理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">// 通常使用 while 循环对结果进行遍历，</div><div class="line">// 并在循环体中通过 ResultSet 的一系列getXxx(列索引 or 列名)</div><div class="line">// 来获取查询表中指定列的值，进行业务逻辑处理。</div><div class="line">while (rs.next()) &#123;</div><div class="line">	// 比如这里我对结果进行输出打印</div><div class="line">	System.out.println(rs.getString(1) + rs.getInt(1));</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="6，回收数据库资源，包括关闭ResultSet、Statement和Connection等资源。"><a href="#6，回收数据库资源，包括关闭ResultSet、Statement和Connection等资源。" class="headerlink" title="6，回收数据库资源，包括关闭ResultSet、Statement和Connection等资源。"></a>6，回收数据库资源，包括关闭ResultSet、Statement和Connection等资源。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">rs.close();</div><div class="line">stmt.close();</div><div class="line">conn.close();</div></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> Java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Java数据库连接 </tag>
            
            <tag> JDBC </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用XML定义选项菜单]]></title>
      <url>/posts/a4a7bc15/</url>
      <content type="html"><![CDATA[<!-- build time:Sun Jul 23 2017 06:31:56 GMT+0800 (CST) --><h3 id="何为选项菜单？"><a href="#何为选项菜单？" class="headerlink" title="何为选项菜单？"></a>何为选项菜单？</h3><blockquote><p>选项菜单是某个Activity的主菜单项，供您放置对应用产生全局影响的操作，如“搜索”、“撰写电子邮件”和设置。选项菜单中的项目在屏幕上的显示位置取决于您开发应用所使用的 Android 版本：</p><ul><li><p>如果您开发的应用适用于 Android 2.3.x （API 级别10）或更低版本，选项菜单的内容会出现在屏幕底部如下图所示，且当菜单项超过6个时，则会讲第六项和其余项目放入溢出菜单（即图中的 More 菜单项）中。<br><img src="https://ww3.sinaimg.cn/large/006tNbRwgy1fcos1fqfvpj305k099mxz.jpg" alt=""></p></li><li><p>如果您开发的应用适用于 Android 3.0 （API 级别 11）及更高版本，选项菜单的内容将出现在应用栏中如下图所示。默认情况下，系统会将所有的菜单项放入操作溢出菜单（即图中标号为3的菜单项）中。<br><img src="https://ww1.sinaimg.cn/large/006tKfTcgy1fcorocpxm5j30bw05ztab.jpg" alt=""></p></li></ul></blockquote><h3 id="创建menu资源文件"><a href="#创建menu资源文件" class="headerlink" title="创建menu资源文件"></a>创建menu资源文件</h3><p>首先我在 app/src/mian/res/menu/ 目录下创建一个 my_menu.xml 文件</p><p>内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</div><div class="line"></div><div class="line">    &lt;item</div><div class="line">        android:id=&quot;@+id/item1&quot;</div><div class="line">        android:icon=&quot;@mipmap/ic_launcher&quot;</div><div class="line">        android:title=&quot;item1&quot;/&gt;</div><div class="line"></div><div class="line">    &lt;item</div><div class="line">        android:id=&quot;@+id/item2&quot;</div><div class="line">        android:icon=&quot;@mipmap/ic_launcher&quot;</div><div class="line">        android:title=&quot;item2&quot;/&gt;</div><div class="line"></div><div class="line">    &lt;group</div><div class="line">        android:id=&quot;@+id/group&quot;</div><div class="line">        android:checkableBehavior=&quot;single&quot;&gt;</div><div class="line">        &lt;item</div><div class="line">            android:id=&quot;@+id/group_item1&quot;</div><div class="line">            android:icon=&quot;@mipmap/ic_launcher&quot;</div><div class="line">            android:title=&quot;group_item1&quot;/&gt;</div><div class="line"></div><div class="line">        &lt;item</div><div class="line">            android:id=&quot;@+id/group_item2&quot;</div><div class="line">            android:icon=&quot;@mipmap/ic_launcher&quot;</div><div class="line">            android:title=&quot;group_item2&quot;/&gt;</div><div class="line">    &lt;/group&gt;</div><div class="line"></div><div class="line">    &lt;item</div><div class="line">        android:id=&quot;@+id/submenu&quot;</div><div class="line">        android:title=&quot;submenu_title&quot;&gt;</div><div class="line">        &lt;menu&gt;</div><div class="line">            &lt;item</div><div class="line">                android:id=&quot;@+id/submenu_item1&quot;</div><div class="line">                android:title=&quot;submenu_item1&quot;/&gt;</div><div class="line">        &lt;/menu&gt;</div><div class="line">    &lt;/item&gt;</div><div class="line"></div><div class="line">&lt;/menu&gt;</div></pre></td></tr></table></figure><p>从代码中我们可以看出，菜单资源文件以<code>&lt;menu&gt;</code>为根节点，使用<code>&lt;item&gt;</code>元素来定义菜单项。同时，我们也可以选择使用<code>&lt;group&gt;</code>元素来定义一个组，来对组内的菜单项的一些特性进行统一的修改，比如是否可见。最后，可以看到我们以在<code>&lt;item&gt;</code>元素中嵌套<code>&lt;menu&gt;</code>元素的方式来创建子菜单。</p><p><code>&lt;item&gt;</code>元素的常用属性：</p><ul><li>android:id 为菜单项指定一个唯一标识</li><li>android:title 指定菜单项的标题</li><li>android:icon 指定菜单项的图标</li><li>android:showAsAction 指定菜单项作为操作项目显示在应用栏的时间和方式</li></ul><p><code>&lt;group&gt;</code>元素的常用属性</p><ul><li>android:id 为改组菜单指定一个唯一标识</li><li>android:checkableBehavior 指定改组菜单的选择行为</li><li>android:visible 指定改组菜单是否可见</li><li>android:enable 指定改组菜单是否可用</li></ul><p>更详细的介绍请参考<a href="https://developer.android.com/guide/topics/resources/menu-resource.html" rel="external nofollow noopener noreferrer" target="_blank">API文档Menu部分</a>。</p><h3 id="加载menu资源文件"><a href="#加载menu资源文件" class="headerlink" title="加载menu资源文件"></a>加载menu资源文件</h3><p>通过重写 onCreateOptionsMenu() 方法，来为 Activity 指定选项菜单。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">public class MainActivity extends AppCompatActivity &#123;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">        super.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public boolean onCreateOptionsMenu(Menu menu) &#123;</div><div class="line">        MenuInflater inflater = getMenuInflater();</div><div class="line">        inflater.inflate(R.menu.my_menu, menu);</div><div class="line">        return true;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>运行效果：</p><p><img src="https://ww3.sinaimg.cn/large/006tNbRwgy1fcow44lkyqg30ba0h8mzc.gif" alt=""></p><h3 id="处理点击事件"><a href="#处理点击事件" class="headerlink" title="处理点击事件"></a>处理点击事件</h3><p>当我们从选项菜单中选择项目时，系统将调用 Activity 的 onOptionsItemSelected() 方法。 此方法将传递所选的 MenuItem，可以通过调用 getItemId() 方法来识别项目，该方法将返回菜单项的唯一 ID（由菜单资源中的 android:id 属性定义）。 我们可以将此 ID 与已知的菜单项匹配，以执行适当的操作。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">public class MainActivity extends AppCompatActivity &#123;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">        super.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public boolean onCreateOptionsMenu(Menu menu) &#123;</div><div class="line">        MenuInflater inflater = getMenuInflater();</div><div class="line">        inflater.inflate(R.menu.my_menu, menu);</div><div class="line">        return true;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public boolean onOptionsItemSelected(MenuItem item) &#123;</div><div class="line">        switch (item.getItemId()) &#123;</div><div class="line">            case R.id.group_item1:</div><div class="line">                item.setChecked(true);</div><div class="line">                return true;</div><div class="line">            case R.id.group_item2:</div><div class="line">                item.setChecked(true);</div><div class="line">                return true;</div><div class="line">            default:</div><div class="line">                Toast.makeText(this, &quot;selected &quot; + item.getTitle(), Toast.LENGTH_SHORT).show();</div><div class="line">                return super.onOptionsItemSelected(item);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>运行效果：</p><p><img src="https://ww1.sinaimg.cn/large/006tNbRwgy1fcown7lxkwg30ba0h8ad1.gif" alt=""></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>本文主要初步的介绍了如何使用 XML 定义选项菜单，定义其他类型菜单的方法类似。更深入的了解和使用菜单请参考<a href="https://developer.android.com/guide/topics/ui/menus.html#options-menu" rel="external nofollow noopener noreferrer" target="_blank">Android官方教程</a>。关于即便设置showAsAction=”always”，items仍然在overflow中显示的问题，请参考<a href="http://www.cnblogs.com/izhanjun/p/4187678.html" rel="external nofollow noopener noreferrer" target="_blank">这篇文章</a>。</p><p>ps:欢迎留言交流，共同进步。</p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/posts/4a17b156/</url>
      <content type="html"><![CDATA[<!-- build time:Sun Jul 23 2017 06:31:56 GMT+0800 (CST) --><p>Welcome to <a href="https://hexo.io/" rel="external nofollow noopener noreferrer" target="_blank">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" rel="external nofollow noopener noreferrer" target="_blank">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" rel="external nofollow noopener noreferrer" target="_blank">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" rel="external nofollow noopener noreferrer" target="_blank">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" rel="external nofollow noopener noreferrer" target="_blank">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" rel="external nofollow noopener noreferrer" target="_blank">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" rel="external nofollow noopener noreferrer" target="_blank">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" rel="external nofollow noopener noreferrer" target="_blank">Deployment</a></p><!-- rebuild by neat -->]]></content>
      
        <categories>
            
            <category> Hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hello World </tag>
            
            <tag> Test </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
